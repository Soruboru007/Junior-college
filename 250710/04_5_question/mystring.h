//******************************************************************************
//  問題5　文字列操作関数
//******************************************************************************
#ifndef ___MYSTRING_H
#define ___MYSTRING_H

#define ___TEST_STRLEN
#define ___TEST_STRCPY
#define ___TEST_STRCAT
//#define ___TEST_STRCMP

// 文字数 ----------------------------------------------------------------------
// 戻り値　int    : 引数で指定された文字列の文字数
// 引数　　string : 対象文字列
int  myStrlen(const char* string);

// 文字列複写 ------------------------------------------------------------------
// 戻り値　char * : 複写先
// 引数　　dst : 複写先
// 　　　　src : 複写元
char* myStrcpy(char* dst, const char* src);

// 文字列複写 ------------------------------------------------------------------
// 戻り値　char * : 複写先
// 引数　　dst : 複写先
// 　　　　src : 複写元
char* myStrcpy2(char* dst, const char* src);

// 文字列連結 ------------------------------------------------------------------
// 戻り値　char * : 連結先
// 引数　　dst : 連結先
// 　　　　src : 連結元
char* myStrcat(char* dst, const char* src);

// 文字列比較 ------------------------------------------------------------------
// 戻り値　int  : str1 == str2 のとき 0、str1 > str2 のとき > 0、str1 < str2 のとき < 0
// 引数　　str1 : 比較される文字列
// 　　　　str2 : 比較する文字列
int  myStrcmp(const char* str1, const char* str2);

// 文字列比較 ------------------------------------------------------------------
// 戻り値　int  : str1 == str2 のとき 0、str1 > str2 のとき > 0、str1 < str2 のとき < 0
// 引数　　str1 : 比較される文字列
// 　　　　str2 : 比較する文字列
int  myStrcmp2(const char* str1, const char* str2);

#endif // ___MYSTRING_H